// Mocks generated by Mockito 5.4.6 from annotations
// in omnium_game/test/matchmaking/matchmaking_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:omnium_game/core/models/match_model.dart' as _i3;
import 'package:omnium_game/features/matchmaking/repositories/matchmaking_repository.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTimestamp_0 extends _i1.SmartFake implements _i2.Timestamp {
  _FakeTimestamp_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMatchModel_1 extends _i1.SmartFake implements _i3.MatchModel {
  _FakeMatchModel_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserMetadata_2 extends _i1.SmartFake implements _i4.UserMetadata {
  _FakeUserMetadata_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultiFactor_3 extends _i1.SmartFake implements _i4.MultiFactor {
  _FakeMultiFactor_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdTokenResult_4 extends _i1.SmartFake implements _i4.IdTokenResult {
  _FakeIdTokenResult_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_5 extends _i1.SmartFake
    implements _i4.UserCredential {
  _FakeUserCredential_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfirmationResult_6 extends _i1.SmartFake
    implements _i4.ConfirmationResult {
  _FakeConfirmationResult_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_7 extends _i1.SmartFake implements _i4.User {
  _FakeUser_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MatchmakingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMatchmakingRepository extends _i1.Mock
    implements _i5.MatchmakingRepository {
  MockMatchmakingRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.MatchModel?> findOrCreateRandomMatch() =>
      (super.noSuchMethod(
            Invocation.method(#findOrCreateRandomMatch, []),
            returnValue: _i6.Future<_i3.MatchModel?>.value(),
          )
          as _i6.Future<_i3.MatchModel?>);

  @override
  _i6.Future<_i3.MatchModel?> inviteFriendToMatch(
    String? friendId,
    String? friendUsername,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#inviteFriendToMatch, [friendId, friendUsername]),
            returnValue: _i6.Future<_i3.MatchModel?>.value(),
          )
          as _i6.Future<_i3.MatchModel?>);

  @override
  _i6.Future<_i3.MatchModel?> acceptFriendInvite(String? matchId) =>
      (super.noSuchMethod(
            Invocation.method(#acceptFriendInvite, [matchId]),
            returnValue: _i6.Future<_i3.MatchModel?>.value(),
          )
          as _i6.Future<_i3.MatchModel?>);

  @override
  _i6.Future<void> cancelOrDeclineMatch(String? matchId) =>
      (super.noSuchMethod(
            Invocation.method(#cancelOrDeclineMatch, [matchId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Stream<_i3.MatchModel?> getMatchStream(String? matchId) =>
      (super.noSuchMethod(
            Invocation.method(#getMatchStream, [matchId]),
            returnValue: _i6.Stream<_i3.MatchModel?>.empty(),
          )
          as _i6.Stream<_i3.MatchModel?>);

  @override
  _i6.Stream<List<_i3.MatchModel>> getPendingInvitesStream() =>
      (super.noSuchMethod(
            Invocation.method(#getPendingInvitesStream, []),
            returnValue: _i6.Stream<List<_i3.MatchModel>>.empty(),
          )
          as _i6.Stream<List<_i3.MatchModel>>);
}

/// A class which mocks [MatchModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockMatchModel extends _i1.Mock implements _i3.MatchModel {
  MockMatchModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i7.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  String get player1Id =>
      (super.noSuchMethod(
            Invocation.getter(#player1Id),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.getter(#player1Id),
            ),
          )
          as String);

  @override
  String get status =>
      (super.noSuchMethod(
            Invocation.getter(#status),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.getter(#status),
            ),
          )
          as String);

  @override
  _i2.Timestamp get createdAt =>
      (super.noSuchMethod(
            Invocation.getter(#createdAt),
            returnValue: _FakeTimestamp_0(this, Invocation.getter(#createdAt)),
          )
          as _i2.Timestamp);

  @override
  _i2.Timestamp get updatedAt =>
      (super.noSuchMethod(
            Invocation.getter(#updatedAt),
            returnValue: _FakeTimestamp_0(this, Invocation.getter(#updatedAt)),
          )
          as _i2.Timestamp);

  @override
  bool get isFriendMatch =>
      (super.noSuchMethod(Invocation.getter(#isFriendMatch), returnValue: false)
          as bool);

  @override
  Map<String, int> get scores =>
      (super.noSuchMethod(
            Invocation.getter(#scores),
            returnValue: <String, int>{},
          )
          as Map<String, int>);

  @override
  List<Object?> get props =>
      (super.noSuchMethod(Invocation.getter(#props), returnValue: <Object?>[])
          as List<Object?>);

  @override
  _i3.MatchModel copyWith({
    String? id,
    String? player1Id,
    String? player1Username,
    String? player2Id,
    String? player2Username,
    String? invitedFriendId,
    String? status,
    _i2.Timestamp? createdAt,
    _i2.Timestamp? updatedAt,
    bool? isFriendMatch,
    String? currentTurn,
    List<Map<String, dynamic>>? questions,
    Map<String, int>? scores,
    String? winnerId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#copyWith, [], {
              #id: id,
              #player1Id: player1Id,
              #player1Username: player1Username,
              #player2Id: player2Id,
              #player2Username: player2Username,
              #invitedFriendId: invitedFriendId,
              #status: status,
              #createdAt: createdAt,
              #updatedAt: updatedAt,
              #isFriendMatch: isFriendMatch,
              #currentTurn: currentTurn,
              #questions: questions,
              #scores: scores,
              #winnerId: winnerId,
            }),
            returnValue: _FakeMatchModel_1(
              this,
              Invocation.method(#copyWith, [], {
                #id: id,
                #player1Id: player1Id,
                #player1Username: player1Username,
                #player2Id: player2Id,
                #player2Username: player2Username,
                #invitedFriendId: invitedFriendId,
                #status: status,
                #createdAt: createdAt,
                #updatedAt: updatedAt,
                #isFriendMatch: isFriendMatch,
                #currentTurn: currentTurn,
                #questions: questions,
                #scores: scores,
                #winnerId: winnerId,
              }),
            ),
          )
          as _i3.MatchModel);

  @override
  Map<String, dynamic> toFirestore() =>
      (super.noSuchMethod(
            Invocation.method(#toFirestore, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i4.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  _i4.UserMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeUserMetadata_2(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i4.UserMetadata);

  @override
  List<_i4.UserInfo> get providerData =>
      (super.noSuchMethod(
            Invocation.getter(#providerData),
            returnValue: <_i4.UserInfo>[],
          )
          as List<_i4.UserInfo>);

  @override
  String get uid =>
      (super.noSuchMethod(
            Invocation.getter(#uid),
            returnValue: _i7.dummyValue<String>(this, Invocation.getter(#uid)),
          )
          as String);

  @override
  _i4.MultiFactor get multiFactor =>
      (super.noSuchMethod(
            Invocation.getter(#multiFactor),
            returnValue: _FakeMultiFactor_3(
              this,
              Invocation.getter(#multiFactor),
            ),
          )
          as _i4.MultiFactor);

  @override
  _i6.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdToken, [forceRefresh]),
            returnValue: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);

  @override
  _i6.Future<_i4.IdTokenResult> getIdTokenResult([
    bool? forceRefresh = false,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdTokenResult, [forceRefresh]),
            returnValue: _i6.Future<_i4.IdTokenResult>.value(
              _FakeIdTokenResult_4(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
          )
          as _i6.Future<_i4.IdTokenResult>);

  @override
  _i6.Future<_i4.UserCredential> linkWithCredential(
    _i4.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithCredential, [credential]),
            returnValue: _i6.Future<_i4.UserCredential>.value(
              _FakeUserCredential_5(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
          )
          as _i6.Future<_i4.UserCredential>);

  @override
  _i6.Future<_i4.UserCredential> linkWithProvider(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithProvider, [provider]),
            returnValue: _i6.Future<_i4.UserCredential>.value(
              _FakeUserCredential_5(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
          )
          as _i6.Future<_i4.UserCredential>);

  @override
  _i6.Future<_i4.UserCredential> reauthenticateWithProvider(
    _i4.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithProvider, [provider]),
            returnValue: _i6.Future<_i4.UserCredential>.value(
              _FakeUserCredential_5(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
          )
          as _i6.Future<_i4.UserCredential>);

  @override
  _i6.Future<_i4.UserCredential> reauthenticateWithPopup(
    _i4.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithPopup, [provider]),
            returnValue: _i6.Future<_i4.UserCredential>.value(
              _FakeUserCredential_5(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
          )
          as _i6.Future<_i4.UserCredential>);

  @override
  _i6.Future<void> reauthenticateWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithRedirect, [provider]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i4.UserCredential> linkWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPopup, [provider]),
            returnValue: _i6.Future<_i4.UserCredential>.value(
              _FakeUserCredential_5(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
          )
          as _i6.Future<_i4.UserCredential>);

  @override
  _i6.Future<void> linkWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithRedirect, [provider]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i4.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i4.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i6.Future<_i4.ConfirmationResult>.value(
              _FakeConfirmationResult_6(
                this,
                Invocation.method(#linkWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i6.Future<_i4.ConfirmationResult>);

  @override
  _i6.Future<_i4.UserCredential> reauthenticateWithCredential(
    _i4.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithCredential, [credential]),
            returnValue: _i6.Future<_i4.UserCredential>.value(
              _FakeUserCredential_5(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
          )
          as _i6.Future<_i4.UserCredential>);

  @override
  _i6.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> sendEmailVerification([
    _i4.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [actionCodeSettings]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i4.User> unlink(String? providerId) =>
      (super.noSuchMethod(
            Invocation.method(#unlink, [providerId]),
            returnValue: _i6.Future<_i4.User>.value(
              _FakeUser_7(this, Invocation.method(#unlink, [providerId])),
            ),
          )
          as _i6.Future<_i4.User>);

  @override
  _i6.Future<void> updateEmail(String? newEmail) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [newEmail]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updatePhoneNumber(
    _i4.PhoneAuthCredential? phoneCredential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneNumber, [phoneCredential]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhotoURL, [photoURL]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i4.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBeforeUpdateEmail, [
              newEmail,
              actionCodeSettings,
            ]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}
