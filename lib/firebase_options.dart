// File generated by Manus. Do not edit.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import "package:firebase_core/firebase_core.dart" show FirebaseOptions;
import "package:flutter/foundation.dart"
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      // Web platform is not configured based on provided files.
      // throw UnsupportedError(
      //   "DefaultFirebaseOptions have not been configured for web - "
      //   "you can reconfigure this by running the FlutterFire CLI again.",
      // );
      // For now, returning a placeholder or the Android options if web is not a primary target.
      // Ideally, web should have its own configuration.
      print("Firebase Web configuration not provided, using placeholder/Android for now.");
      return android; // Or a specific web FirebaseOptions if available
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        // macOS platform is not configured based on provided files.
        // throw UnsupportedError(
        //   "DefaultFirebaseOptions have not been configured for macos - "
        //   "you can reconfigure this by running the FlutterFire CLI again.",
        // );
        print("Firebase macOS configuration not provided, using placeholder/iOS for now.");
        return ios; // Or a specific macOS FirebaseOptions if available
      case TargetPlatform.windows:
        throw UnsupportedError(
          "DefaultFirebaseOptions have not been configured for windows - "
          "you can reconfigure this by running the FlutterFire CLI again.",
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          "DefaultFirebaseOptions have not been configured for linux - "
          "you can reconfigure this by running the FlutterFire CLI again.",
        );
      default:
        throw UnsupportedError(
          "DefaultFirebaseOptions are not supported for this platform.",
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: "AIzaSyCEdbDThAIBHkaPokfZFsQiyhPm2R4LmT4",
    appId: "1:960520710383:android:35d6959d184a842cddd31a",
    messagingSenderId: "960520710383",
    projectId: "omniumgame-f8fc1",
    storageBucket: "omniumgame-f8fc1.firebasestorage.app",
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: "AIzaSyCX43Tv94LXapzopUxvPOhzxSthMx1BMg4",
    appId: "1:960520710383:ios:67734564a5ab049bddd31a",
    messagingSenderId: "960520710383",
    projectId: "omniumgame-f8fc1",
    storageBucket: "omniumgame-f8fc1.firebasestorage.app",
    iosBundleId: "com.example.omniumGame",
  );

  // Placeholder for Web - User did not provide web configuration
  // static const FirebaseOptions web = FirebaseOptions(
  //   apiKey: "YOUR_WEB_API_KEY",
  //   appId: "YOUR_WEB_APP_ID",
  //   messagingSenderId: "960520710383",
  //   projectId: "omniumgame-f8fc1",
  //   authDomain: "omniumgame-f8fc1.firebaseapp.com",
  //   storageBucket: "omniumgame-f8fc1.firebasestorage.app",
  // );

  // Placeholder for macOS - User did not provide macOS configuration
  // static const FirebaseOptions macos = FirebaseOptions(
  //   apiKey: "YOUR_MACOS_API_KEY",
  //   appId: "YOUR_MACOS_APP_ID",
  //   messagingSenderId: "960520710383",
  //   projectId: "omniumgame-f8fc1",
  //   storageBucket: "omniumgame-f8fc1.firebasestorage.app",
  //   iosBundleId: "com.example.omniumGame.RunnerTests", // This might need adjustment
  // );
}

